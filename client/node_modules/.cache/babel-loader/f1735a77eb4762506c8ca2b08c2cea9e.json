{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Events.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport default class Events extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newEvent: {\n        name: '',\n        description: '',\n        address: '',\n        cityState: '',\n        zipCode: 0,\n        price: 0\n      }\n    };\n\n    this.getAllEvents = async () => {\n      try {\n        const res = await axios.get('/api/event');\n        const newState = { ...this.state\n        };\n        newState.allEvents = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all event');\n        console.log(error);\n      }\n    };\n\n    this.onChangeEvent = evt => {\n      const newState = { ...this.state\n      };\n      newState.newEvent[evt.target.name] = evt.target.value;\n      this.setState(newState);\n    };\n\n    this.onDeleteEvent = async eventId => {\n      await axios.delete(`/api/event/${eventId}`);\n      this.getAllEvents();\n    };\n\n    this.onSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        await axios.post('/api/event', this.state.newEvent);\n        this.getAllEvents();\n      } catch (error) {\n        console.log('Failed to create event');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllEvents();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Events\"), this.state.allEvents.map(event => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/event/${event._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, event.name)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, event.description), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, event.address), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, event.cityState), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, event.zipCode), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, event.price), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.onDeleteEvent(event._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, \"Delete\"));\n    }), \"}\");\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Events.js"],"names":["React","Link","axios","Events","Component","state","newEvent","name","description","address","cityState","zipCode","price","getAllEvents","res","get","newState","allEvents","data","setState","error","console","log","onChangeEvent","evt","target","value","onDeleteEvent","eventId","delete","onSubmit","preventDefault","post","componentDidMount","render","map","event","_id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport default class Events extends React.Component {\n\n    state = {\n        newEvent: {\n            name: '',\n            description: '',\n            address: '',\n            cityState: '',\n            zipCode: 0,\n            price: 0\n        }\n    }\n\n    componentDidMount() {\n        this.getAllEvents()\n    }\n\n    getAllEvents = async () => {\n        try {\n            const res = await axios.get('/api/event')\n            const newState = { ...this.state }\n            newState.allEvents = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all event')\n            console.log(error)\n        }\n    }\n\n    onChangeEvent = (evt) => {\n        const newState = { ...this.state }\n        newState.newEvent[evt.target.name] = evt.target.value\n        this.setState(newState)\n    }\n\n    onDeleteEvent = async (eventId) => {\n        await axios.delete(`/api/event/${eventId}`)\n        this.getAllEvents()\n    }\n\n    onSubmit = async (evt) => {\n        evt.preventDefault()\n        try {\n            await axios.post('/api/event', this.state.newEvent)\n            this.getAllEvents()\n        } catch (error) {\n            console.log('Failed to create event')\n            console.log(error)\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h1>Events</h1>\n\n                {/* <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.newEvent.name}\n                            onChange={this.onChangeEvent}/>\n                    </div>\n\n                    <div>\n                    <label htmlFor=\"description\">Description</label>\n                    <input\n                        type=\"text\"\n                        name=\"description\"\n                        value={this.state.newEvent.description}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <input\n                        type=\"text\"\n                        name=\"address\"\n                        value={this.state.newEvent.address}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"cityState\">City/State</label>\n                    <input\n                        type=\"text\"\n                        name=\"cityState\"\n                        value={this.state.newEvent.cityState}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"zipCode\">Zip Code</label>\n                    <input\n                        type=\"number\"\n                        name=\"zipCode\"\n                        value={this.state.newEvent.zipCode}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        type=\"number\"\n                        name=\"price\"\n                        value={this.state.newEvent.zipCode}\n                        onChange={this.onChangeEvent}/>\n                </div>\n                </form> */}\n            \n                {this.state.allEvents.map((event) =>{\n                    return(\n                        <div>\n                            <Link to={`/event/${event._id}`}>\n                                <div>{event.name}</div>\n                            </Link>\n                            <div>{event.description}</div>\n                            <div>{event.address}</div>\n                            <div>{event.cityState}</div>\n                            <div>{event.zipCode}</div>  \n                            <div>{event.price}</div>     \n                            <button onClick={() => this.onDeleteEvent(event._id)}>Delete</button>                     \n                            </div>\n                    )\n                })}\n    }\n\n            </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}