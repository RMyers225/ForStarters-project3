{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Events.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport default class Events extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allEvents\n    };\n\n    this.getAllEvents = async () => {\n      try {\n        const res = await axios.get('/api/event');\n        const newState = { ...this.state\n        };\n        newState.allEvents = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all event');\n        console.log(error);\n      }\n    };\n\n    this.onChangeEvent = evt => {\n      const newState = { ...this.state\n      };\n      newState.newEvent[evt.target.name] = evt.target.value;\n      this.setState(newState);\n    };\n\n    this.onDeleteEvent = async eventId => {\n      await axios.delete(`/api/event/${eventId}`);\n      this.getAllEvents();\n    };\n\n    this.onSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        await axios.post('/api/event', this.state.newEvent);\n        this.getAllEvents();\n      } catch (error) {\n        console.log('Failed to create event');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllEvents();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Events\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Events.js"],"names":["React","Link","axios","Events","Component","state","allEvents","getAllEvents","res","get","newState","data","setState","error","console","log","onChangeEvent","evt","newEvent","target","name","value","onDeleteEvent","eventId","delete","onSubmit","preventDefault","post","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEhDC,KAFgD,GAExC;AACJC,MAAAA;AADI,KAFwC;;AAAA,SAUhDC,YAVgD,GAUjC,YAAY;AACvB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,YAAV,CAAlB;AACA,cAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKL;AAAV,SAAjB;AACAK,QAAAA,QAAQ,CAACJ,SAAT,GAAqBE,GAAG,CAACG,IAAzB;AACA,aAAKC,QAAL,CAAcF,QAAd;AACH,OALD,CAKE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KApB+C;;AAAA,SAsBhDG,aAtBgD,GAsB/BC,GAAD,IAAS;AACrB,YAAMP,QAAQ,GAAG,EAAE,GAAG,KAAKL;AAAV,OAAjB;AACAK,MAAAA,QAAQ,CAACQ,QAAT,CAAkBD,GAAG,CAACE,MAAJ,CAAWC,IAA7B,IAAqCH,GAAG,CAACE,MAAJ,CAAWE,KAAhD;AACA,WAAKT,QAAL,CAAcF,QAAd;AACH,KA1B+C;;AAAA,SA4BhDY,aA5BgD,GA4BhC,MAAOC,OAAP,IAAmB;AAC/B,YAAMrB,KAAK,CAACsB,MAAN,CAAc,cAAaD,OAAQ,EAAnC,CAAN;AACA,WAAKhB,YAAL;AACH,KA/B+C;;AAAA,SAiChDkB,QAjCgD,GAiCrC,MAAOR,GAAP,IAAe;AACtBA,MAAAA,GAAG,CAACS,cAAJ;;AACA,UAAI;AACA,cAAMxB,KAAK,CAACyB,IAAN,CAAW,YAAX,EAAyB,KAAKtB,KAAL,CAAWa,QAApC,CAAN;AACA,aAAKX,YAAL;AACH,OAHD,CAGE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KA1C+C;AAAA;;AAMhDe,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,YAAL;AACH;;AAsCDsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AA8EH;;AA7H+C","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport default class Events extends React.Component {\n\n    state = {\n        allEvents\n    }\n\n    componentDidMount() {\n        this.getAllEvents()\n    }\n\n    getAllEvents = async () => {\n        try {\n            const res = await axios.get('/api/event')\n            const newState = { ...this.state }\n            newState.allEvents = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all event')\n            console.log(error)\n        }\n    }\n\n    onChangeEvent = (evt) => {\n        const newState = { ...this.state }\n        newState.newEvent[evt.target.name] = evt.target.value\n        this.setState(newState)\n    }\n\n    onDeleteEvent = async (eventId) => {\n        await axios.delete(`/api/event/${eventId}`)\n        this.getAllEvents()\n    }\n\n    onSubmit = async (evt) => {\n        evt.preventDefault()\n        try {\n            await axios.post('/api/event', this.state.newEvent)\n            this.getAllEvents()\n        } catch (error) {\n            console.log('Failed to create event')\n            console.log(error)\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h1>Events</h1>\n\n                {/* <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.newEvent.name}\n                            onChange={this.onChangeEvent}/>\n                    </div>\n\n                    <div>\n                    <label htmlFor=\"description\">Description</label>\n                    <input\n                        type=\"text\"\n                        name=\"description\"\n                        value={this.state.newEvent.description}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <input\n                        type=\"text\"\n                        name=\"address\"\n                        value={this.state.newEvent.address}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"cityState\">City/State</label>\n                    <input\n                        type=\"text\"\n                        name=\"cityState\"\n                        value={this.state.newEvent.cityState}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"zipCode\">Zip Code</label>\n                    <input\n                        type=\"number\"\n                        name=\"zipCode\"\n                        value={this.state.newEvent.zipCode}\n                        onChange={this.onChangeEvent}/>\n                </div>\n\n                <div>\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        type=\"number\"\n                        name=\"price\"\n                        value={this.state.newEvent.zipCode}\n                        onChange={this.onChangeEvent}/>\n                </div>\n                </form> */}\n            \n                {/* {this.state.allEvents.map((event) =>{\n                    return(\n                        <div>\n                            <Link to={`/event/${event._id}`}>\n                                <div>{event.name}</div>\n                            </Link>\n                            <div>{event.description}</div>\n                            <div>{event.address}</div>\n                            <div>{event.cityState}</div>\n                            <div>{event.zipCode}</div>  \n                            <div>{event.price}</div>     \n                            <button onClick={() => this.onDeleteEvent(event._id)}>Delete</button>                     \n                            </div>\n                    )\n                })} */}\n    \n\n            </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}