{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios';\n\nfunction shuffleQuestion(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: []\n    };\n\n    this.getAllQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.allQuestions = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  render() {\n    let shuffled = shuffleQuestion(this.state.allQuestions);\n    shuffled = shuffled[0].bind();\n    console.log(shuffled);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Question\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","axios","shuffleQuestion","array","i","length","j","Math","floor","random","temp","Questions","Component","state","allQuestions","getAllQuestions","res","get","newState","data","setState","error","console","log","componentDidMount","render","shuffled","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,SAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACf,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACKD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACJH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACM;;AACR,SAAOP,KAAP;AACE;;AAKT,eACA,MAAMQ,SAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,YAAY,EAAE;AADV,KAF4B;;AAAA,SAYpCC,eAZoC,GAYlB,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKL;AAAV,SAAjB;AACAK,QAAAA,QAAQ,CAACJ,YAAT,GAAwBE,GAAG,CAACG,IAA5B;AACA,aAAKC,QAAL,CAAcF,QAAd;AACH,OALD,CAKE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAtBmC;AAAA;;AAMpCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,eAAL;AACH;;AAgBDU,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAGxB,eAAe,CAAC,KAAKW,KAAL,CAAWC,YAAZ,CAA9B;AACAY,IAAAA,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAAZ,EAAX;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAcH;;AA1CmC","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction shuffleQuestion(array) {\n    let i = array.length - 1;\n    for (; i > 0; i--) { \n        const j = Math.floor(Math.random() * (i + 1));    \n        const temp = array[i]; \n             array[i] = array[j];   \n         array[j] = temp\n              }\n       return array;\n        }â€©\n\n\n\nexport default \nclass Questions extends React.Component {\n\n    state = {\n        allQuestions: []\n    }\n\n    componentDidMount() {\n        this.getAllQuestions()\n    }\n\n\n\n    getAllQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.allQuestions = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n\n    render() {\n        let shuffled = shuffleQuestion(this.state.allQuestions);\n        shuffled = shuffled[0].bind()\n        console.log(shuffled)\n        return (\n            <div>\n                <h1>Question</h1>\n\n                {/* {shuffled.map((question) => {\n                    return (<div key={question._id}>\n                        <div>{question.question}</div>\n                    </div>\n                    )\n                })} */}\n                    \n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}