{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminQuestions.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class AdminQuestions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newAdminQuestion: {\n        question: ''\n      }\n    };\n\n    this.getAllAdminQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.AdminQuestions = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n\n    this.onChangeAdminQuestion = evt => {\n      const newState = { ...this.state\n      };\n      newState.newAdminQuestion[evt.target.name] = evt.target.value;\n      this.setState(newState);\n    };\n\n    this.onDeleteAdminQuestion = async adminQuestionId => {\n      await axios.delete(`/api/question/${adminQuestionId}`);\n      this.getAllAdminQuestions();\n    };\n\n    this.onSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        await axios.post('/api/question', this.state.newAdminQuestion);\n        this.getAllAdminQuestions();\n      } catch (error) {\n        console.log('Failed to create questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllAdminQuestions();\n  }\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Questions\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Question\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\" // value={this.state.newAdminQuestion.question}\n      ,\n      onChange: this.onChangeAdminQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminQuestions.js"],"names":["React","Component","axios","AdminQuestions","state","newAdminQuestion","question","getAllAdminQuestions","res","get","newState","data","setState","error","console","log","onChangeAdminQuestion","evt","target","name","value","onDeleteAdminQuestion","adminQuestionId","delete","onSubmit","preventDefault","post","componentDidMount","render"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;AAIA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAMlDG,KANkD,GAM1C;AACJC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,QAAQ,EAAE;AADI;AADd,KAN0C;;AAAA,SAiBlDC,oBAjBkD,GAiB3B,YAAY;AAC/B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKN;AAAV,SAAjB;AACAM,QAAAA,QAAQ,CAACP,cAAT,GAA0BK,GAAG,CAACG,IAA9B;AACA,aAAKC,QAAL,CAAcF,QAAd;AACH,OALD,CAKE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KA3BiD;;AAAA,SA6BlDG,qBA7BkD,GA6BzBC,GAAD,IAAS;AAC7B,YAAMP,QAAQ,GAAG,EAAC,GAAG,KAAKN;AAAT,OAAjB;AACAM,MAAAA,QAAQ,CAACL,gBAAT,CAA0BY,GAAG,CAACC,MAAJ,CAAWC,IAArC,IAA6CF,GAAG,CAACC,MAAJ,CAAWE,KAAxD;AACA,WAAKR,QAAL,CAAcF,QAAd;AACH,KAjCiD;;AAAA,SAmClDW,qBAnCkD,GAmC1B,MAAOC,eAAP,IAA2B;AAC/C,YAAMpB,KAAK,CAACqB,MAAN,CAAc,iBAAgBD,eAAgB,EAA9C,CAAN;AACA,WAAKf,oBAAL;AACH,KAtCiD;;AAAA,SAyClDiB,QAzCkD,GAyCvC,MAAOP,GAAP,IAAe;AACtBA,MAAAA,GAAG,CAACQ,cAAJ;;AACA,UAAI;AACA,cAAMvB,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA4B,KAAKtB,KAAL,CAAWC,gBAAvC,CAAN;AACA,aAAKE,oBAAL;AACH,OAHD,CAGE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAlDiD;AAAA;;AAYlDc,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,oBAAL;AACH;;AAwCD;;;;;;AAMAqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAM,MAAA,QAAQ,EAAE,KAAKJ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT,CAGI;AAHJ;AAII,MAAA,QAAQ,EAAE,KAAKR,qBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAUI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAJJ,CADJ;AAmBH;;AAhFiD;AAmFtD;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class AdminQuestions extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        newAdminQuestion: {\n            question: '',\n        },\n    }\n\n    componentDidMount() {\n        this.getAllAdminQuestions()\n    }\n    \n    \n    getAllAdminQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.AdminQuestions = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n    \n    onChangeAdminQuestion = (evt) => {\n        const newState = {...this.state}\n        newState.newAdminQuestion[evt.target.name] = evt.target.value\n        this.setState(newState)\n    }\n    \n    onDeleteAdminQuestion = async (adminQuestionId) => {\n        await axios.delete(`/api/question/${adminQuestionId}`)\n        this.getAllAdminQuestions()\n    }\n    \n    \n    onSubmit = async (evt) => {\n        evt.preventDefault()\n        try {\n            await axios.post('/api/question', this.state.newAdminQuestion)\n            this.getAllAdminQuestions()\n        } catch (error) {\n            console.log('Failed to create questions')\n            console.log(error)\n        }\n    }\n    \n    \n    \n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                {/* <h1>{this.state.message}</h1> */}\n                <h1>Questions</h1>\n                <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label htmlFor=\"question\">Question</label>\n                        <input\n                            type=\"text\"\n                            name=\"question\"\n                            // value={this.state.newAdminQuestion.question}\n                            onChange={this.onChangeAdminQuestion} />\n                    </div>\n    \n                    <input type=\"submit\" value=\"Create Question\"/>\n                </form>\n            </div>\n        )\n    }\n }\n    \n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}