{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminPlaces.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class AdminPlaces extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newAdminPlace: {\n        name: '',\n        address: '',\n        cityState: '',\n        zipCode: Number\n      }\n    };\n\n    this.getAllAdminPlaces = async () => {\n      try {\n        const res = await axios.get('/api/AdminPlace');\n        const newState = { ...this.state\n        };\n        newState.AdminPlaces = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all places');\n        console.log(error);\n      }\n    };\n\n    this.onChangeAdminPlace = evt => {\n      const newState = { ...this.state\n      };\n      newState.newAdminPlace[evt.target.name] = evt.target.value;\n      this.setState(newState);\n    };\n\n    this.onDeleteAdminPlace = async AdminPlaceId => {\n      await axios.delete(`/api/AdminPlace/${AdminPlaceId}`);\n      this.getAllAdminPlaces();\n    };\n\n    this.onSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        await axios.post('/api/AdminPlace', this.state.newAdminPlace);\n        this.getAllAdminPlaces();\n      } catch (error) {\n        console.log('Failed to create places');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllAdminPlaces();\n  }\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.newAdminPlace.name,\n      onChange: this.onChangeAdminPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.newAdminPlace.address,\n      onChange: this.onChangeAdminPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cityState\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"City/State\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cityState\",\n      value: this.state.newAdminPlace.cityState,\n      onChange: this.onChangeAdminPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zipCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Zip Code\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"zipCode\",\n      value: this.state.newAdminPlace.zipCode,\n      onChange: this.onChangeAdminPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminPlaces.js"],"names":["React","Component","Link","axios","AdminPlaces","state","newAdminPlace","name","address","cityState","zipCode","Number","getAllAdminPlaces","res","get","newState","data","setState","error","console","log","onChangeAdminPlace","evt","target","value","onDeleteAdminPlace","AdminPlaceId","delete","onSubmit","preventDefault","post","componentDidMount","render"],"mappings":"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","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class AdminPlaces extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        newAdminPlace: {\n            name: '',\n            address: '',\n            cityState: '',\n            zipCode: Number,\n        },\n    }\n\n    componentDidMount() {\n        this.getAllAdminPlaces()\n    }\n\n\n    getAllAdminPlaces = async () => {\n        try {\n            const res = await axios.get('/api/AdminPlace')\n            const newState = { ...this.state }\n            newState.AdminPlaces = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all places')\n            console.log(error)\n        }\n    }\n\n    onChangeAdminPlace = (evt) => {\n        const newState = { ...this.state }\n        newState.newAdminPlace[evt.target.name] = evt.target.value\n        this.setState(newState)\n    }\n\n    onDeleteAdminPlace = async (AdminPlaceId) => {\n        await axios.delete(`/api/AdminPlace/${AdminPlaceId}`)\n        this.getAllAdminPlaces()\n    }\n\n\n    onSubmit = async (evt) => {\n        evt.preventDefault()\n        try {\n            await axios.post('/api/AdminPlace', this.state.newAdminPlace)\n            this.getAllAdminPlaces()\n        } catch (error) {\n            console.log('Failed to create places')\n            console.log(error)\n        }\n    }\n\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                {/* <h1>{this.state.message}</h1> */}\n                <h1></h1>\n                <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.newAdminPlace.name}\n                            onChange={this.onChangeAdminPlace} />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"address\">Address</label>\n                        <input\n                            type=\"text\"\n                            name=\"address\"\n                            value={this.state.newAdminPlace.address}\n                            onChange={this.onChangeAdminPlace} />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"cityState\">City/State</label>\n                        <input\n                            type=\"text\"\n                            name=\"cityState\"\n                            value={this.state.newAdminPlace.cityState}\n                            onChange={this.onChangeAdminPlace} />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"zipCode\">Zip Code</label>\n                        <input\n                            type=\"number\"\n                            name=\"zipCode\"\n                            value={this.state.newAdminPlace.zipCode}\n                            onChange={this.onChangeAdminPlace} />\n                    </div>\n\n                    {/* <input type=\"submit\" value=\"Create Place\" /> */}\n                </form>\n            </div>\n        )\n    }\n}\n\n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}