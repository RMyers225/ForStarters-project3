{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios'; // function shuffleQuestion(array) {\n//     let i = array.length - 1;\n//     for (; i > 0; i--) { \n//         const j = Math.floor(Math.random() * (i + 1));    \n//         const temp = array[i]; \n//              array[i] = array[j];   \n//          array[j] = temp\n//               }\n//       const newState = { ...this.state };\n//       newState.allQuestions= array\n//       console.log(newState.allQuestions)\n//         }\n\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: []\n    };\n\n    this.shuffleQuestion = array => {\n      let i = array.length - 1;\n\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      cons;\n      tnewState = { ...this.state\n      };\n      newState.allQuestions = array;\n      newState.singleQuestion = array[0].question;\n      console.log(newState.singleQuestion);\n      console.log(newState.allQuestions);\n      this.setState(newState);\n    };\n\n    this.getAllQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.allQuestions = res.data;\n        this.setState(newState);\n        this.shuffleQuestion(this.state.allQuestions);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n\n    this.onChangeQuestion = async questionId => {\n      await axios.delete(`/api/question/${this.state.allQuestions._id}`, this.state.allQuestions);\n      this.getAllQuestions();\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Question\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, this.state.singleQuestion), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","axios","Questions","Component","state","allQuestions","shuffleQuestion","array","i","length","j","Math","floor","random","temp","cons","tnewState","newState","singleQuestion","question","console","log","setState","getAllQuestions","res","get","data","error","onChangeQuestion","questionId","delete","_id","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,eACA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,YAAY,EAAE;AADV,KAF4B;;AAAA,SAUxCC,eAVwC,GAUrBC,KAAD,IAAW;AACrB,UAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACJ,aAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACf,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,QAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,QAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACH;;AACDC,MAAAA,IAAI;AACRC,MAAAA,SAAS,GAAG,EAAE,GAAG,KAAKZ;AAAV,OAAZ;AACAa,MAAAA,QAAQ,CAACZ,YAAT,GAAwBE,KAAxB;AACAU,MAAAA,QAAQ,CAACC,cAAT,GAA0BX,KAAK,CAAC,CAAD,CAAL,CAASY,QAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,cAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACZ,YAArB;AACA,WAAKiB,QAAL,CAAcL,QAAd;AACC,KAzBuC;;AAAA,SA4BpCM,eA5BoC,GA4BlB,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,eAAV,CAAlB;AACR,cAAMR,QAAQ,GAAG,EAAE,GAAG,KAAKb;AAAV,SAAjB;AACAa,QAAAA,QAAQ,CAACZ,YAAT,GAAwBmB,GAAG,CAACE,IAA5B;AACI,aAAKJ,QAAL,CAAcL,QAAd;AACA,aAAKX,eAAL,CAAqB,KAAKF,KAAL,CAAWC,YAAhC;AACH,OANG,CAMF,OAAOsB,KAAP,EAAc;AAChBP,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACA,KAvCuC;;AAAA,SAyCxCC,gBAzCwC,GAyCrB,MAAOC,UAAP,IAAsB;AACrC,YAAM5B,KAAK,CAAC6B,MAAN,CAAc,iBAAgB,KAAK1B,KAAL,CAAWC,YAAX,CAAwB0B,GAAI,EAA1D,EAA6D,KAAK3B,KAAL,CAAWC,YAAxE,CAAN;AACA,WAAKkB,eAAL;AACH,KA5CuC;AAAA;;AAMxCS,EAAAA,iBAAiB,GAAG;AACR,SAAKT,eAAL;AACP;;AAsCLU,EAAAA,MAAM,GAAG;AAER,wBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAK7B,KAAL,CAAWc,cADV,CAFF,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,CADP;AAcI;;AA9DmC","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n// function shuffleQuestion(array) {\n//     let i = array.length - 1;\n//     for (; i > 0; i--) { \n//         const j = Math.floor(Math.random() * (i + 1));    \n//         const temp = array[i]; \n//              array[i] = array[j];   \n//          array[j] = temp\n//               }\n//       const newState = { ...this.state };\n//       newState.allQuestions= array\n//       console.log(newState.allQuestions)\n//         } \n\n\n\nexport default \nclass Questions extends React.Component {\n\n    state = {\n        allQuestions: []\n    }          \n    \ncomponentDidMount() {\n            this.getAllQuestions()\n    }\n    \nshuffleQuestion = (array) => {\n        let i = array.length - 1;\n    for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp\n    } \n    cons\ntnewState = { ...this.state };\nnewState.allQuestions = array\nnewState.singleQuestion = array[0].question\nconsole.log(newState.singleQuestion)\nconsole.log(newState.allQuestions)\nthis.setState(newState)\n} \n\n    getAllQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n    const newState = { ...this.state }\n    newState.allQuestions = res.data\n        this.setState(newState)\n        this.shuffleQuestion(this.state.allQuestions)\n    } catch (error) {\n    console.log('Failed to get all questions')\n    console.log(error)\n}\n} \n\nonChangeQuestion = async (questionId) => {\n    await axios.delete(`/api/question/${this.state.allQuestions._id}`, this.state.allQuestions)\n    this.getAllQuestions()\n}\n\nrender() {\n    \n return (\n        < div >\n        <h1>Question</h1>\n          <div>\n        {this.state.singleQuestion}\n    </div >              \n        \n\n        < div ></div >\n\n                    \n            </div >     \n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}