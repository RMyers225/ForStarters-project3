{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios';\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: [],\n      theQuestion: ''\n    };\n\n    this.shuffleQuestion = array => {\n      let i = array.length - 1;\n\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      const newState = { ...this.state\n      };\n      newState.theQuestion = array[0].question;\n      this.setState(newState);\n      console.log(this.state.theQuestion);\n    };\n\n    this.getAllQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.allQuestions = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n    this.shuffleQuestion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Question\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","axios","Questions","Component","state","allQuestions","theQuestion","shuffleQuestion","array","i","length","j","Math","floor","random","temp","newState","question","setState","console","log","getAllQuestions","res","get","data","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eACA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAF4B;;AAAA,SAYxCC,eAZwC,GAYpBC,KAAD,IAAW;AAC1B,UAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACf,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACKD,QAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACJH,QAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACM;;AACR,YAAMC,QAAQ,GAAE,EAAC,GAAG,KAAKZ;AAAT,OAAhB;AACAY,MAAAA,QAAQ,CAACV,WAAT,GAAuBE,KAAK,CAAC,CAAD,CAAL,CAASS,QAAhC;AACA,WAAKC,QAAL,CAAcF,QAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWE,WAAvB;AACE,KAxB+B;;AAAA,SA4BpCe,eA5BoC,GA4BlB,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMP,QAAQ,GAAG,EAAE,GAAG,KAAKZ;AAAV,SAAjB;AACAY,QAAAA,QAAQ,CAACX,YAAT,GAAwBiB,GAAG,CAACE,IAA5B;AACA,aAAKN,QAAL,CAAcF,QAAd;AACH,OALD,CAKE,OAAOS,KAAP,EAAc;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,KAtCmC;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,eAAL;AACA,SAAKd,eAAL;AACH;;AA8BDoB,EAAAA,MAAM,GAAG;AAGL,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFJ;AAUH;;AArDmC","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default \nclass Questions extends React.Component {\n\n    state = {\n        allQuestions: [],\n        theQuestion: '',\n    }\n\n    componentDidMount() {\n        this.getAllQuestions()\n        this.shuffleQuestion()\n    }\n\nshuffleQuestion = ((array) => {\n    let i = array.length - 1;\n    for (; i > 0; i--) { \n        const j = Math.floor(Math.random() * (i + 1));    \n        const temp = array[i]; \n             array[i] = array[j];   \n         array[j] = temp\n              }\n       const newState= {...this.state}\n       newState.theQuestion = array[0].question\n       this.setState(newState)\n       console.log(this.state.theQuestion)\n        }â€©)\n\n\n    getAllQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.allQuestions = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n\n    render() {\n        \n\n        return (\n\n            <div>\n                <h1>Question</h1>\n\n\n                    \n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}