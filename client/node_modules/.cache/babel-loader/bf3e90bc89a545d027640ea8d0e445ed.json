{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios';\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: []\n    };\n\n    this.getOneQuestion = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.allQuestions = res.data;\n        this.setState(newState); // getAllQuestions = async () => {\n        //     try {\n        //         const res = await axios.get('/api/question')\n        //         const newState = { ...this.state }\n        //         newState.allQuestions = res.data\n        //         this.setState(newState)\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  render() {\n    const question = this.state.allQuestions.sort(() => Math.random() - Math.random()).find(() => true);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Question\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"\\\"\", question.question, \"\\\"\"), \"}\");\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","axios","Questions","Component","state","allQuestions","getOneQuestion","res","get","newState","data","setState","error","console","log","componentDidMount","getAllQuestions","render","question","sort","Math","random","find"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEnDC,KAFmD,GAE3C;AACJC,MAAAA,YAAY,EAAE;AADV,KAF2C;;AAAA,SAUnDC,cAVmD,GAUlC,YAAY;AACzB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKL;AAAV,SAAjB;AACAK,QAAAA,QAAQ,CAACJ,YAAT,GAAwBE,GAAG,CAACG,IAA5B;AACA,aAAKC,QAAL,CAAcF,QAAd,EAJA,CAOR;AACA;AACA;AACA;AACA;AACA;AAIK,OAhBD,CAgBE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KA/BkD;AAAA;;AAMnDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,eAAL;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKd,KAAL,CAAWC,YAAX,CAAwBc,IAAxB,CAA6B,MAAMC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAAnD,EAEuBC,IAFvB,CAE4B,MAAM,IAFlC,CAAjB;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOJ,QAAQ,CAACA,QAAhB,OAHJ,MADJ;AAOH;;AA5CkD","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default class Questions extends React.Component {\n\n    state = {\n        allQuestions: []\n    }\n\n    componentDidMount() {\n        this.getAllQuestions()\n    }\n\n    getOneQuestion = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.allQuestions = res.data\n            this.setState(newState)\n\n\n    // getAllQuestions = async () => {\n    //     try {\n    //         const res = await axios.get('/api/question')\n    //         const newState = { ...this.state }\n    //         newState.allQuestions = res.data\n    //         this.setState(newState)\n\n\n\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n    render() {\n        const question = this.state.allQuestions.sort(() => Math.random() - Math.random())     \n                                               .find(() => true); \n        return (\n            <div>\n               \n                <h1>Question</h1>\n                <div>\"{question.question}\"</div>\n                }\n    </div>)\n    } \n}"]},"metadata":{},"sourceType":"module"}