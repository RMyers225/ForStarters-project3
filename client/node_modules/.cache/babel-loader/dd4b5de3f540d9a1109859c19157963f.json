{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      oneQuestion: []\n    };\n\n    this.getAllQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.oneQuestion = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Question\"), this.state.oneQuestion.map(question => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: question._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/questions/${question._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, question.question)));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","Link","axios","Questions","Component","state","oneQuestion","getAllQuestions","res","get","newState","data","setState","error","console","log","componentDidMount","render","map","question","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEnDC,KAFmD,GAE3C;AACJC,MAAAA,WAAW,EAAE;AADT,KAF2C;;AAAA,SAUnDC,eAVmD,GAUjC,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKL;AAAV,SAAjB;AACAK,QAAAA,QAAQ,CAACJ,WAAT,GAAuBE,GAAG,CAACG,IAA3B;AACA,aAAKC,QAAL,CAAcF,QAAd;AACH,OALD,CAKE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KApBkD;AAAA;;AAMnDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,eAAL;AACH;;AAaDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGK,KAAKZ,KAAL,CAAWC,WAAX,CAAuBY,GAAvB,CAA4BC,QAAD,IAAc;AACtC,0BACI;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,cAAaD,QAAQ,CAACC,GAAI,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,QAAQ,CAACA,QAAf,CADJ,CADJ,CADJ;AASH,KAVA,CAHL,CADJ;AAkBH;;AAxCkD","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport default class Questions extends React.Component {\n\n    state = {\n        oneQuestion: []\n    }\n\n    componentDidMount() {\n        this.getAllQuestions()\n    }\n\n    getAllQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.oneQuestion = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h1>Question</h1>\n\n                {this.state.oneQuestion.map((question) => {\n                    return (\n                        <div key={question._id}>\n                            <Link to={`/questions/${question._id}`}>\n                                <div>{question.question}</div>\n                            </Link>\n\n                            {/* <button onClick={() => this.onClick(question._id)}>Next</button> */}\n                        </div>\n                    )\n                })}\n\n\n            </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}