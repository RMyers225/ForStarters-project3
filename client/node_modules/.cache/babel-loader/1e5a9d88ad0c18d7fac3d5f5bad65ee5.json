{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport axios from 'axios'; // function shuffleQuestion(array) {\n//     let i = array.length - 1;\n//     for (; i > 0; i--) { \n//         const j = Math.floor(Math.random() * (i + 1));    \n//         const temp = array[i]; \n//              array[i] = array[j];   \n//          array[j] = temp\n//               }\n//       const newState = { ...this.state };\n//       newState.allQuestions= array\n//       console.log(newState.allQuestions)\n//         }\n\nexport default class Questions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: []\n    };\n\n    this.shuffleQuestion = array => {\n      let i = array.length - 1;\n\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      const newState = { ...this.state\n      };\n      newState.allQuestions = array;\n      newState.singleQuestion = array[0].question;\n      console.log(newState.allQuestions);\n    };\n\n    this.getAllQuestions = async () => {\n      try {\n        const res = await axios.get('/api/question');\n        const newState = { ...this.state\n        };\n        newState.allQuestions = res.data;\n        this.setState(newState);\n        this.shuffleQuestion(this.state.allQuestions);\n      } catch (error) {\n        console.log('Failed to get all questions');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Question\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/Questions.js"],"names":["React","axios","Questions","Component","state","allQuestions","shuffleQuestion","array","i","length","j","Math","floor","random","temp","newState","singleQuestion","question","console","log","getAllQuestions","res","get","data","setState","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,eACA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,YAAY,EAAE;AADV,KAF4B;;AAAA,SAUnCC,eAVmC,GAUhBC,KAAD,IAAW;AAC1B,UAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACf,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACKD,QAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACJH,QAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACM;;AACT,YAAMC,QAAQ,GAAG,EAAE,GAAG,KAAKX;AAAV,OAAjB;AACAW,MAAAA,QAAQ,CAACV,YAAT,GAAuBE,KAAvB;AACAQ,MAAAA,QAAQ,CAACC,cAAT,GAAyBT,KAAK,CAAC,CAAD,CAAL,CAASU,QAAlC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACV,YAArB;AACG,KAvB2B;;AAAA,SA0BpCe,eA1BoC,GA0BlB,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,eAAV,CAAlB;AACA,cAAMP,QAAQ,GAAG,EAAE,GAAG,KAAKX;AAAV,SAAjB;AACAW,QAAAA,QAAQ,CAACV,YAAT,GAAwBgB,GAAG,CAACE,IAA5B;AACA,aAAKC,QAAL,CAAcT,QAAd;AACA,aAAKT,eAAL,CAAqB,KAAKF,KAAL,CAAWC,YAAhC;AACH,OAND,CAME,OAAOoB,KAAP,EAAc;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACJ,KArCmC;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,eAAL;AACH;;AA+BDO,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAcH;;AAvDmC","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n// function shuffleQuestion(array) {\n//     let i = array.length - 1;\n//     for (; i > 0; i--) { \n//         const j = Math.floor(Math.random() * (i + 1));    \n//         const temp = array[i]; \n//              array[i] = array[j];   \n//          array[j] = temp\n//               }\n//       const newState = { ...this.state };\n//       newState.allQuestions= array\n//       console.log(newState.allQuestions)\n//         } \n\n\n\nexport default \nclass Questions extends React.Component {\n\n    state = {\n        allQuestions: []\n    }\n\n    componentDidMount() {\n        this.getAllQuestions()\n    }\n\n     shuffleQuestion = (array) => {\n        let i = array.length - 1;\n        for (; i > 0; i--) { \n            const j = Math.floor(Math.random() * (i + 1));    \n            const temp = array[i]; \n                 array[i] = array[j];   \n             array[j] = temp\n                  }\n          const newState = { ...this.state };\n          newState.allQuestions= array\n          newState.singleQuestion= array[0].question\n          \n          console.log(newState.allQuestions)\n            } \n\n    getAllQuestions = async () => {\n        try {\n            const res = await axios.get('/api/question')\n            const newState = { ...this.state }\n            newState.allQuestions = res.data\n            this.setState(newState)\n            this.shuffleQuestion(this.state.allQuestions)\n        } catch (error) {\n            console.log('Failed to get all questions')\n            console.log(error)\n        }\n    }\n\n    render() {\n       \n        return (\n            <div>\n                <h1>Question</h1>\n\n                {/* {shuffled.map((question) => {\n                    return (<div key={question._id}>\n                        <div>{question.question}</div>\n                    </div>\n                    )\n                })} */}\n                    \n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}