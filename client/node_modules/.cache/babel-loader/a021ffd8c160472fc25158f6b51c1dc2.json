{"ast":null,"code":"var _jsxFileName = \"/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminEvents.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class AdminEvents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newAdminEvent: {\n        name: '',\n        description: '',\n        address: '',\n        cityState: '',\n        zipCode: Number,\n        price: 0\n      }\n    };\n\n    this.getAllAdminEvents = async () => {\n      try {\n        const res = await axios.get('/api/adminEvent');\n        const newState = { ...this.state\n        };\n        newState.AdminEvents = res.data;\n        this.setState(newState);\n      } catch (error) {\n        console.log('Failed to get all events');\n        console.log(error);\n      }\n    };\n\n    this.onChangeAdminEvent = evt => {\n      const newState = { ...this.state\n      };\n      newState.newAdminEvent[evt.target.name] = evt.target.value;\n      this.setState(newState);\n    };\n\n    this.onDeleteAdminEvent = async AdminEventId => {\n      await axios.delete(`/api/AdminEvent/${AdminEventId}`);\n      this.getAllAdminEvents();\n    };\n\n    this.onSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        await axios.post('/api/AdminEvent', this.state.newAdminEvent);\n        this.getAllAdminEvents();\n      } catch (error) {\n        console.log('Failed to create events');\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllAdminEvents();\n  }\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Events\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.newAdminEvent.name,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.newAdminEvent.description,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.newAdminEvent.address,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cityState\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"City/State\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cityState\",\n      value: this.state.newAdminEvent.cityState,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zipCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: this.state.newAdminEvent.price,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: this.state.newAdminEvent.price,\n      onChange: this.onChangeAdminEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }","map":{"version":3,"sources":["/Users/PaigeMy/ga-sei/ForStarters-project-3/client/src/components/AdminEvents.js"],"names":["React","Component","Link","axios","AdminEvents","state","newAdminEvent","name","description","address","cityState","zipCode","Number","price","getAllAdminEvents","res","get","newState","data","setState","error","console","log","onChangeAdminEvent","evt","target","value","onDeleteAdminEvent","AdminEventId","delete","onSubmit","preventDefault","post","componentDidMount","render"],"mappings":"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","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class AdminEvents extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        newAdminEvent: {\n            name: '',\n            description: '',\n            address: '',\n            cityState: '',\n            zipCode: Number,\n            price: 0,\n        },\n    }\n\n    componentDidMount() {\n        this.getAllAdminEvents()\n    }\n    \n    \n    getAllAdminEvents = async () => {\n        try {\n            const res = await axios.get('/api/adminEvent')\n            const newState = { ...this.state }\n            newState.AdminEvents = res.data\n            this.setState(newState)\n        } catch (error) {\n            console.log('Failed to get all events')\n            console.log(error)\n        }\n    }\n    \n    onChangeAdminEvent = (evt) => {\n        const newState = {...this.state}\n        newState.newAdminEvent[evt.target.name] = evt.target.value\n        this.setState(newState)\n    }\n    \n    onDeleteAdminEvent = async (AdminEventId) => {\n        await axios.delete(`/api/AdminEvent/${AdminEventId}`)\n        this.getAllAdminEvents()\n    }\n    \n    \n    onSubmit = async (evt) => {\n        evt.preventDefault()\n        try {\n            await axios.post('/api/AdminEvent', this.state.newAdminEvent)\n            this.getAllAdminEvents()\n        } catch (error) {\n            console.log('Failed to create events')\n            console.log(error)\n        }\n    }\n    \n    \n    \n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                {/* <h1>{this.state.message}</h1> */}\n                <h1>Events</h1>\n                <form onSubmit={this.onSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.newAdminEvent.name}\n                            onChange={this.onChangeAdminEvent} />\n                    </div>\n    \n                    <div>\n                        <label htmlFor=\"description\">Description</label>\n                        <input\n                            type=\"text\"\n                            name=\"description\"\n                            value={this.state.newAdminEvent.description}\n                            onChange={this.onChangeAdminEvent} />\n                    </div>\n    \n                    <div>\n                        <label htmlFor=\"address\">Address</label>\n                        <input\n                            type=\"text\"\n                            name=\"address\"\n                            value={this.state.newAdminEvent.address}\n                            onChange={this.onChangeAdminEvent} />\n                    </div>\n    \n                    <div>\n                        <label htmlFor=\"cityState\">City/State</label>\n                        <input \n                            type=\"text\"\n                            name=\"cityState\"\n                            value={this.state.newAdminEvent.cityState}\n                            onChange={this.onChangeAdminEvent} />\n                    </div>\n    \n                    <div>\n                        <label htmlFor=\"zipCode\">Price</label>\n                        <input\n                            type=\"number\"\n                            name=\"price\"\n                            value={this.state.newAdminEvent.price}\n                            onChange={this.onChangeAdminEvent} />\n                    </div> \n\n                    <div>\n                        <label htmlFor=\"price\">Price</label>\n                        <input\n                            type=\"number\"\n                            name=\"price\"\n                            value={this.state.newAdminEvent.price}\n                            onChange={this.onChangeAdminEvent} />\n                    </div> \n    \n                    <input type=\"submit\" value=\"Create Event\"/>\n                </form>\n            </div>\n        )\n    }\n }\n    \n/* Step 4\n* Use componentDidMount to retrieve any data to display\n*   Here you can make calls to your local express server\n*   or to an external API\n*   setState can be run here as well\n*   -REMINDER remember `setState` it is an async function\n// */\n// componentDidMount() {\n//     axios.get('/api/events')\n//         .then((res) => {\n//             this.setState({ newEvent: res.data })\n//         })\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}